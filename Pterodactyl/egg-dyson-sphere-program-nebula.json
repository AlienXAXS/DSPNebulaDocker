{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-11-27T19:45:13+00:00",
    "name": "Dyson Sphere Program Nebula",
    "author": "mark.phillips@axsemail.co.uk",
    "description": null,
    "features": null,
    "docker_images": {
        "Proton Docker Image": "alienxaxs\/pterodactyl-proton-wine:v1",
        "Wine Docker Image": "ghcr.io\/parkervcp\/yolks:wine_staging"
    },
    "file_denylist": [],
    "startup": "winetricks sound=disabled; export WINEARCH=\"win64\"; WINEDLLOVERRIDES=\"mscoree=n,b;mshtml=n,b;winhttp=n,b\"; wine \/home\/container\/DSPGame.exe -batchmode -nographics -server -load-latest",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Game loaded\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# Installation Script\r\n# Created by AlienX\r\n## Define variables\r\n# Reset\r\nColor_Off='\\033[0m'       # Text Reset;\r\n\r\n# Regular Colors\r\nBlack='\\033[0;30m'        # Black\r\nRed='\\033[0;31m'          # Red\r\nGreen='\\033[0;32m'        # Green\r\nYellow='\\033[0;33m'       # Yellow\r\nBlue='\\033[0;34m'         # Blue\r\nPurple='\\033[0;35m'       # Purple\r\nCyan='\\033[0;36m'         # Cyan\r\nWhite='\\033[0;37m'        # White\r\n\r\n# Bold\r\nBBlack='\\033[1;30m'       # Black\r\nBRed='\\033[1;31m'         # Red\r\nBGreen='\\033[1;32m'       # Green\r\nBYellow='\\033[1;33m'      # Yellow\r\nBBlue='\\033[1;34m'        # Blue\r\nBPurple='\\033[1;35m'      # Purple\r\nBCyan='\\033[1;36m'        # Cyan\r\nBWhite='\\033[1;37m'       # White\r\n\r\n# Underline\r\nUBlack='\\033[4;30m'       # Black\r\nURed='\\033[4;31m'         # Red\r\nUGreen='\\033[4;32m'       # Green\r\nUYellow='\\033[4;33m'      # Yellow\r\nUBlue='\\033[4;34m'        # Blue\r\nUPurple='\\033[4;35m'      # Purple\r\nUCyan='\\033[4;36m'        # Cyan\r\nUWhite='\\033[4;37m'       # White\r\n\r\n# Background\r\nOn_Black='\\033[40m'       # Black\r\nOn_Red='\\033[41m'         # Red\r\nOn_Green='\\033[42m'       # Green\r\nOn_Yellow='\\033[43m'      # Yellow\r\nOn_Blue='\\033[44m'        # Blue\r\nOn_Purple='\\033[45m'      # Purple\r\nOn_Cyan='\\033[46m'        # Cyan\r\nOn_White='\\033[47m'       # White\r\n\r\n# High Intensity\r\nIBlack='\\033[0;90m'       # Black\r\nIRed='\\033[0;91m'         # Red\r\nIGreen='\\033[0;92m'       # Green\r\nIYellow='\\033[0;93m'      # Yellow\r\nIBlue='\\033[0;94m'        # Blue\r\nIPurple='\\033[0;95m'      # Purple\r\nICyan='\\033[0;96m'        # Cyan\r\nIWhite='\\033[0;97m'       # White\r\n\r\n# Bold High Intensity\r\nBIBlack='\\033[1;90m'      # Black\r\nBIRed='\\033[1;91m'        # Red\r\nBIGreen='\\033[1;92m'      # Green\r\nBIYellow='\\033[1;93m'     # Yellow\r\nBIBlue='\\033[1;94m'       # Blue\r\nBIPurple='\\033[1;95m'     # Purple\r\nBICyan='\\033[1;96m'       # Cyan\r\nBIWhite='\\033[1;97m'      # White\r\n\r\n# High Intensity backgrounds\r\nOn_IBlack='\\033[0;100m'   # Black\r\nOn_IRed='\\033[0;101m'     # Red\r\nOn_IGreen='\\033[0;102m'   # Green\r\nOn_IYellow='\\033[0;103m'  # Yellow\r\nOn_IBlue='\\033[0;104m'    # Blue\r\nOn_IPurple='\\033[0;105m'  # Purple\r\nOn_ICyan='\\033[0;106m'    # Cyan\r\nOn_IWhite='\\033[0;107m'   # White\r\n\r\napt update\r\napt install psmisc -y\r\n\r\nexport HOME=\/mnt\/server\r\nBEPINEX_PLUGINS=(\"nebula\/NebulaMultiplayerMod\" \"nebula\/NebulaMultiplayerModApi\" \"PhantomGamers\/IlLine\" \"CommonAPI\/CommonAPI\" \"starfi5h\/BulletTime\" \"xiaoye97\/LDBTool\" \"CommonAPI\/DSPModSave\")\r\n\r\nif [[ ! -z \"$ADDITIONAL_PLUGINS\" ]]\r\nthen\r\n    read -a tmpArray <<< $ADDITIONAL_PLUGINS\r\n    BEPINEX_PLUGINS=(\"${BEPINEX_PLUGINS[@]}\" \"${tmpArray[@]}\")\r\nfi\r\n\r\ntmpMsg=\"\"\r\nfor i in ${!BEPINEX_PLUGINS[@]}; do\r\n    tmpMsg+=\"${BEPINEX_PLUGINS[$i]},\"\r\ndone\r\n\r\necho \"Will download the following plugins: $tmpMsg\"\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p $HOME\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C $HOME\/steamcmd\r\nmkdir -p $HOME\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd $HOME\/steamcmd\r\n\r\n# Get SteamCMD Installed\r\necho -e \"[${Green}SteamCMD${Color_Off}] Init SteamCMD... Wait.\"\r\n.\/steamcmd.sh +quit 2>&1 > \/dev\/null\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\n\r\n## Check if SteamGuard is enabled\r\nif [ -z ${STEAM_PASS} ]\r\nthen\r\n    echo -e \"[${Red}ERROR${Color_Off}] This egg requires you to provide a steam login that owns Dyson Sphere Program.\"\r\n    echo -e \"[${Red}ERROR${Color_Off}] Please provide this information and reinstall the server from the Settings tab to try again.\"\r\n    exit 0\r\nfi\r\n\r\nif [ \"${STEAM_AUTH}\" == \"\" ]\r\nthen\r\n    STEAM_AUTH=\"123456abcdef\"\r\nfi\r\n\r\necho -e \"[${Green}Steam Guard Checker${Color_Off}] Checking if the account has Steam Guard, please wait...\"\r\nif [[ -z \"${HOME}\/SGC_Stage1\" ]]\r\nthen\r\n    rm -f ${HOME}\/SGC_Stage1\r\n    echo -e \"[${Green}Steam Guard Checker${Color_Off}] Removed previous SGC_Stage1\"\r\nfi\r\n.\/steamcmd.sh +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} +log_files_always_flush 1 +@ShutdownOnFailedCommand 1 +quit 2>&1 > ${HOME}\/SGC_Stage1\r\nLastExitState=$?\r\nLastExitMessage=$(tail -1 \"${HOME}\/SGC_Stage1\" | cut -d \"(\" -f2)\r\nLastExitMessage=${LastExitMessage::-1}\r\n\r\nif ! [ $LastExitState -eq 0 ]\r\nthen\r\n    case $LastExitMessage in\r\n        \"Invalid Password\")\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] ${Red}Fatal Error!${Color_Off}\"\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] ${Red}Invalid Steam Login Credentials!${Color_Off}\"\r\n            exit 0\r\n            ;;\r\n        \r\n        \"Invalid Login Auth Code\")\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] ${Red}Your account has Steam Guard!${Color_Off}\"\r\n            ;;\r\n        \r\n        *)\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] ${Red}Fatal Error - Got unknown response from SteamCMD${Color_Off}\"\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] ${Red}Response: ${LastExitMessage}, Report this to the script developer.${Color_Off}\"\r\n            exit 0\r\n            ;;\r\n    esac\r\nfi\r\n\r\nif [ $LastExitState -eq 5 ] && [ \"$LastExitMessage\" == \"Invalid Login Auth Code\" ]\r\nthen\r\n    echo -e \"[${Green}Steam Guard Checker${Color_Off}] Generating Steam Guard Key for account ${STEAM_USER}!\"\r\n    if [[ -z \"${HOME}\/SGC_Stage2\" ]]\r\n    then\r\n        rm -f ${HOME}\/SGC_Stage2\r\n        echo -e \"[${Green}Steam Guard Checker${Color_Off}] Removed previous SGC_Stage2\"\r\n    fi\r\n    .\/steamcmd.sh +login ${STEAM_USER} ${STEAM_PASS} +log_files_always_flush 1 +@ShutdownOnFailedCommand 1 +quit 2>&1 > ${HOME}\/SGC_Stage2 &\r\n    \r\n    WaitingForSteamCMD=0\r\n    echo -e \"[${Green}Steam Guard Checker${Color_Off}] Waiting for key to generate...!\"\r\n    while [ $WaitingForSteamCMD -le 10 ]\r\n    do\r\n        if grep -q \"Steam Guard\" \"${HOME}\/SGC_Stage2\"; then\r\n            echo -e \"[${Green}Steam Guard Checker${Color_Off}] Key Generated - Check your emails!\"\r\n            break\r\n        fi\r\n        sleep 1\r\n        ((WaitingForSteamCMD++))\r\n    done\r\n    \r\n    killall steamcmd 2>&1 > \/dev\/null\r\n    echo -e \"[${Green}Steam Guard Checker${Color_Off}] SteamCMD Process Terminated!\"\r\n    \r\n    if [ ${WaitingForSteamCMD} == 10 ]\r\n    then\r\n        echo -e \"[${Red}ERROR${Color_Off}] Operation timed out waiting for SteamCMD to generate an auth token.\"\r\n        exit 0\r\n    fi\r\nelse\r\n    echo -e \"[${Green}Steam Guard Checker${Color_Off}] Success: Steam Guard Checks Passed!\"\r\nfi\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir $HOME +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} +@sSteamCmdForcePlatformType windows +app_update ${SRCDS_APPID} validate +quit\r\n\r\n## set up 32 bit libraries\r\nmkdir -p $HOME\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p $HOME\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\ncd $HOME\r\n\r\n## Install Goldberg Steam Emu\r\necho \"## Installing Goldberg Steam Emu\"\r\nrm -f $HOME\/DSPGAME_Data\/Plugins\/steam_api64.dll\r\ncurl -L \"https:\/\/gitlab.com\/Mr_Goldberg\/goldberg_emulator\/-\/jobs\/2987292049\/artifacts\/raw\/steam_api64.dll\" --output \"$HOME\/DSPGAME_Data\/Plugins\/steam_api64.dll\" 2> \/dev\/null\r\necho \"##  -> Applying Settings\"\r\nmkdir -p $HOME\/DSPGAME_Data\/Plugins\/steam_settings\r\ntouch $HOME\/DSPGAME_Data\/Plugins\/steam_settings\/disable_networking.txt\r\necho \"1366540\" > $HOME\/DSPGAME_Data\/Plugins\/steam_appid.txt\r\necho \"##  -> Done\"\r\n\r\n## Install BepInEx from GitHub\r\nLATEST_JSON=$(curl --silent \"https:\/\/api.github.com\/repos\/BepInEx\/BepInEx\/releases\/latest\")\r\nDOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i x64)\r\nFILE_NAME=$(echo \"${DOWNLOAD_LINK##*\/}\")\r\necho \"## Attempting to download BepInEx from $DOWNLOAD_LINK\"\r\ncurl -OL $DOWNLOAD_LINK > \/dev\/null\r\necho \"## Installing BepInEx\"\r\nunzip -o \".\/$FILE_NAME\" > \/dev\/null\r\necho \"##   -> Done\"\r\nrm -fR $FILE_NAME\r\nmkdir -p $HOME\/BepInEx\/plugins\r\nmkdir -p $HOME\/BepInEx\/patchers\r\n\r\n#Download Required Mods\r\necho \"## Downloading BepInEx Plugins...\"\r\nmkdir -p $HOME\/temp\r\ncd $HOME\/temp\r\nfor i in ${!BEPINEX_PLUGINS[@]}; do\r\n    TS_ASSET=$(curl --silent \"https:\/\/dsp.thunderstore.io\/api\/experimental\/package\/${BEPINEX_PLUGINS[$i]}\/\")\r\n    TS_ASSET_VERSION=$(echo $TS_ASSET | jq .latest.version_number | sed 's\/\"\/\/g')\r\n    TS_ASSET_NAME=$(echo $TS_ASSET | jq .name | sed 's\/\"\/\/g')\r\n    TS_DL_URL=$(echo $TS_ASSET | jq .latest.download_url | sed 's\/\"\/\/g')\r\n    echo \"## Attempting to download $TS_ASSET_NAME v$TS_ASSET_VERSION from Thunderstore.io\"\r\n    curl -L $TS_DL_URL --output \"$TS_ASSET_NAME.zip\" 2> \/dev\/null\r\n    \r\n    echo \"## Extracting $TS_ASSET_NAME.zip\"\r\n    mkdir -p \"$HOME\/temp\/$TS_ASSET_NAME\"\r\n    unzip -o \".\/$TS_ASSET_NAME.zip\" -d \"$HOME\/temp\/$TS_ASSET_NAME\" > \/dev\/null\r\n    rm -fR \".\/$TS_ASSET_NAME.zip\"\r\n    \r\n    # Check for a \"plugins\" or \"patchers\" sub directory.\r\n    CWD=\"$HOME\/temp\/$TS_ASSET_NAME\"\r\n    echo \"##  -> Installing\"\r\n    if [ -d \"$CWD\/plugins\" ]\r\n    then\r\n        mkdir -p \"$HOME\/BepInEx\/plugins\/$TS_ASSET_NAME\"\r\n        cp -fr $CWD\/plugins\/* \"$HOME\/BepInEx\/plugins\/$TS_ASSET_NAME\/\"\r\n    else\r\n        cp -fr $CWD $HOME\/BepInEx\/plugins\r\n    fi\r\n    \r\n    if [ -d \"$CWD\/patchers\" ]\r\n    then\r\n        echo \"##  -> Installing Patcher\"\r\n        mkdir -p \"$HOME\/BepInEx\/patchers\/$TS_ASSET_NAME\"\r\n        cp -fr $CWD\/patchers\/* \"$HOME\/BepInEx\/patchers\/$TS_ASSET_NAME\/\"\r\n    fi\r\n    \r\n    echo \"##  -> Done\"\r\ndone\r\n\r\necho \"1366540\" > $HOME\/steam_appid.txt\r\nmkdir -p $HOME\/Dyson\\ Sphere\\ Program\/Achievement\r\nmkdir -p $HOME\/Dyson\\ Sphere\\ Program\/Blueprint\r\nmkdir -p $HOME\/Dyson\\ Sphere\\ Program\/Save\r\n\r\nrm -rf $HOME\/temp\r\n\r\necho \"## INSTALL COMPLETE\"",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "APP ID",
            "description": "SteaCMD Game App ID for Download",
            "env_variable": "SRCDS_APPID",
            "default_value": "1366540",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric|digits_between:1,7",
            "field_type": "text"
        },
        {
            "name": "Steam Username",
            "description": "Steam Username to download the game",
            "env_variable": "STEAM_USER",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:50",
            "field_type": "text"
        },
        {
            "name": "Steam Password",
            "description": "Your steam usernames password to download the game",
            "env_variable": "STEAM_PASS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:30",
            "field_type": "text"
        },
        {
            "name": "WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "vcrun2013 vcrun2017 corefonts dotnet48",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "WINEDEBUG",
            "description": "WINEDEBUG: Debug Level of wine",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Auto Update the game server files every time the server is started.\r\nWarning: You'll need to ensure Steam Guard is disabled for this to work, not recommended.  Only toggle this when you need to update.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Additional Thunderstore Plugins",
            "description": "A space separated list of additional plugins to install.  For example if you wanted to also install Galactic Scale and Reverse Belt Direction you would use \"Galactic_Scale\/GalacticScale GreyHak\/DSP_Belt_Reverse_Direction\".\r\n\r\nThis value is obtained via the URL of the modpage in the form of Author\/PluginName",
            "env_variable": "ADDITIONAL_PLUGINS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:256",
            "field_type": "text"
        },
        {
            "name": "Windows Install",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|boolean|max:20",
            "field_type": "text"
        },
        {
            "name": "Steam Guard Auth Key",
            "description": "Provide your Steam Guard Auth Key.  The installer will request this if it's needed.",
            "env_variable": "STEAM_AUTH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        }
    ]
}